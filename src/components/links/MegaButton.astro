---
import { ArrowRightIcon } from '@heroicons/react/20/solid'
import { ArrowDownTrayIcon, DocumentTextIcon, MapIcon } from '@heroicons/react/24/outline'
import { RectangleStackIcon } from '@heroicons/react/24/outline'
import MapRouletteLogo from './assets/MapRouletteLogo.svg'
import { twMerge } from 'tailwind-merge'

type Props = {
  href: string
  iconKey: 'map' | 'stack' | 'maproulette' | 'document' | 'download'
  label: string
  subline?: string | undefined
  className?: string | undefined
}

const { href, iconKey, label, subline, className } = Astro.props
const newWindow = href.startsWith('http')
---

<div class={twMerge('not-prose @container mt-12', className)}>
  <a
    href={href}
    target={newWindow ? '_blank' : undefined}
    rel={newWindow ? 'noopener noreferrer' : undefined}
    class="group/button flex flex-row items-start gap-4 rounded-sm border border-teal-100 p-4 no-underline shadow-md hover:bg-teal-100/70 hover:shadow-xl lg:items-center @lg:py-6 @lg:pr-6 @lg:pl-8"
  >
    {
      (() => {
        switch (iconKey) {
          case 'map':
            return (
              <MapIcon className="size-14 text-teal-200 group-hover/button:text-teal-900 @lg:size-20" />
            )
          case 'stack':
            return (
              <RectangleStackIcon className="size-16 text-teal-200 group-hover/button:text-teal-900 @lg:size-20" />
            )
          case 'maproulette':
            return (
              // @ts-expect-error https://github.com/withastro/astro/issues/13467
              <MapRouletteLogo class="size-14 text-teal-200 group-hover/button:text-teal-900 @lg:size-16" />
            )
          case 'document':
            return (
              <DocumentTextIcon className="size-16 text-teal-200 group-hover/button:text-teal-900 @lg:size-20" />
            )
          case 'download':
            return (
              <ArrowDownTrayIcon className="size-16 text-teal-200 group-hover/button:text-teal-900 @lg:size-16" />
            )
        }
      })()
    }
    <div>
      <h2
        data-noanchor
        class="mb-0 flex items-center gap-1 font-sans text-xl leading-tight font-semibold tracking-wide text-teal-200 group-hover/button:text-teal-950 @lg:text-3xl"
      >
        {label}
        <ArrowRightIcon className="size-8" />
      </h2>
      {
        subline && (
          <p class="mt-1 mb-1 text-sm leading-tight text-teal-100 group-hover/button:text-teal-800 @lg:text-base">
            {subline}
          </p>
        )
      }
    </div>
  </a>
</div>
