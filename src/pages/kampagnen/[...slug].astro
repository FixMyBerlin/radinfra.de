---
export const prerender = true
//
import { LinkExternal } from '@components/Link/LinkExternal'
import { maprouletteChallengeUrl } from '@components/Link/maprouletteChallengeUrl'
import MegaButton from '@components/Link/MegaButton.astro'
import { CampaignLeaderboard } from '@components/page_kampagne/CampaignLeaderboard'
import { CampaignProgress } from '@components/page_kampagne/CampaignProgress'
import Details from '@components/text/Details.astro'
import DevDetails from '@components/text/DevDetails.astro'
import Markdown from '@components/text/Markdown.astro'
import PageHeadline from '@components/text/PageHeadline.astro'
import ProseSection from '@components/text/ProseSection.astro'
import LayoutArticlePageAstro from '@layouts/LayoutArticlePageAstro.astro'
import { type CollectionEntry, getCollection } from 'astro:content'

type Props = CollectionEntry<'localCampaigns'> | CollectionEntry<'remoteCampaigns'>
export async function getStaticPaths() {
  const localCampaigns = await getCollection('localCampaigns')
  const remoteCampaigns = await getCollection('remoteCampaigns')
  type Merged = { params: { slug: string }; props: Props }[]
  const mergedCampaigns: Merged = []

  localCampaigns.forEach((campaign) => {
    mergedCampaigns.push({
      params: { slug: campaign.data.id },
      props: campaign,
    })
  })
  remoteCampaigns.forEach((campaign) => {
    mergedCampaigns.push({
      params: { slug: campaign.data.id },
      props: campaign,
    })
  })
  return mergedCampaigns
}

const page = Astro.props
const { data } = page
// NOTE:
//   We cannot use the Keystatic<>Astro content integration
//   https://github.com/Thinkmill/keystatic/discussions/1318
//   ~`const { Content } = await render(page)`~

const maprouletteUrl =
  data.maprouletteChallenge.enabled === true
    ? maprouletteChallengeUrl(data.maprouletteChallenge.id)
    : undefined

const noindex = maprouletteUrl === undefined || data.visibility == 'hidden'
---

<LayoutArticlePageAstro title={data.title} noindex={noindex} language="de">
  <PageHeadline category="Kampagnen" headline={data.title} intro={data.description} />

  <ProseSection classes="mb-0">
    <h2>Aufgabe</h2>
    <Markdown markdown={data.task} unstyled={true} />

    <h2>Mitmachen</h2>

    {
      data.maprouletteChallenge.enabled === true && data.maprouletteChallenge.id && (
        <CampaignProgress challengeId={data.maprouletteChallenge.id} client:load />
      )
    }

    {
      data.recommendedAction === 'mapillary' && (
        <div>
          <MegaButton
            href="/mitmachen/fotos"
            iconKey="document"
            label="Zur Anleitung"
            subline="So kannst du mit Handy oder 360° Kamera Fotos machen…"
            className="mt-3"
          />
          {data.mapUrl && (
            <>
              <MegaButton
                href={data.mapUrl}
                iconKey="map"
                label="Karte: Wege wo Fotos fehlen"
                subline="Sehen, wo in deiner Region Fotos fehlen…"
                className="my-3"
              />
              <p>
                Die Karte zeigt die Radinfrastruktur (meist blau) und auch Radrouten (transparent).
                Die flächigen Wege zeigen, wo es recht aktuelle Fotos bei Mapillary gibt. Dort, wo
                diese Wege fehlen, ist Bedarf…
              </p>
            </>
          )}
        </div>
      )
    }

    {
      data.recommendedAction === 'streetcomplete' && (
        <div>
          <p>
            Der einfachste Weg diese Daten zu erfassen ist die StreetComplete App (bisher nur für
            Android).
          </p>
          <MegaButton
            href="/mitmachen/streetcomplete"
            iconKey="download"
            label="StreetComplete herunterladen"
            subline="Für Android-Nutzer:innen der einfachste Weg…"
            className="mt-3"
          />
          {data.mapUrl && (
            <MegaButton
              href={data.mapUrl}
              iconKey="map"
              label="Karte: Wo Angaben fehlen"
              subline="Wo es in deiner Region etwas zu tun gibt…"
              className="my-3"
            />
          )}
        </div>
      )
    }

    {
      data.recommendedAction === 'map' && (
        <div>
          {data.mapUrl && (
            <MegaButton
              href={data.mapUrl}
              iconKey="map"
              label="Zur Karte"
              subline="Finde Aufgaben in deiner Region."
              className="mt-3"
            />
          )}

          <Details title="Kurzanleitung" classes="prose-sm mt-2" defaultOpen={true}>
            <ol>
              <li>
                In der Karte einen <strong>Weg auswählen</strong>
              </li>
              <li>
                Rechts den Button zum <strong>Bearbeiten</strong> verwenden
              </li>
              <li>
                Tipp: Die Aufgabenbeschreibung enthält hilfreiche Links zu{' '}
                <strong>Straßenfotos</strong> bei Mapillary
              </li>
              <li>
                Die Aufgabe <strong>im iD Editor bearbeiten</strong> und Änderungen in OSM speichern
              </li>
            </ol>
            <p>Deine Änderungen sind am nächsten Tag in der Karte zu sehen.</p>
          </Details>
        </div>
      )
    }

    {
      data.recommendedAction === 'maproulette' && data.maprouletteChallenge.enabled === true && (
        <div>
          {data.mapUrl && (
            <MegaButton
              href={data.mapUrl}
              iconKey="maproulette"
              label="Zur Karte"
              subline="Finde Aufgaben in deiner Region."
              className="mt-3"
            />
          )}

          <Details title="Kurzanleitung" classes="prose-sm mt-2" defaultOpen={true}>
            <ol>
              <li>
                In der Karte einen <strong>Weg auswählen</strong>
              </li>
              <li>
                Rechts den Button zum <strong>Bearbeiten</strong> verwenden
              </li>
              <li>
                Tipp: Die Aufgabenbeschreibung enthält hilfreiche Links zu{' '}
                <strong>Straßenfotos</strong> bei Mapillary
              </li>
              <li>
                Die Aufgabe <strong>im iD Editor bearbeiten</strong> und Änderungen in OSM speichern
              </li>
              <li>
                In <strong>MapRoulette</strong>: Zum Abschluss die Aufgabe als erledigt (oder eine
                andere Option) markieren
              </li>
            </ol>
            <p>Deine Änderungen sind am nächsten Tag in der Karte zu sehen.</p>
          </Details>

          {maprouletteUrl && (
            <div class="mt-12 mb-0">
              Alternativ kannst du
              <LinkExternal href={maprouletteUrl}>
                die Kampagne über MapRoulette.com
              </LinkExternal>{' '}
              bearbeiten.
              <Details title="Kurzanleitung">
                <ol>
                  <li>Bei MapRoulette mit OSM anmelden</li>
                  <li>Eine konkrete Aufgabe auswählen oder "Start" klicken</li>
                  <li>
                    Tipp: Die Aufgabenbeschreibung enthält hilfreiche Links zu Mapillary und Co
                  </li>
                  <li>
                    Die Aufgabe im iD Editor oder JOSM bearbeiten und Änderungen in OSM speichern
                  </li>
                  <li>
                    Zum Abschluss die Aufgabe als erledigt (oder eine andere Option) speichern
                  </li>
                </ol>
              </Details>
            </div>
          )}

          {data.maprouletteChallenge.id && (
            <div class="mt-12 mb-0">
              <CampaignLeaderboard challengeId={data.maprouletteChallenge.id} client:only="react" />
            </div>
          )}
        </div>
      )
    }
  </ProseSection>

  <ProseSection classes="prose-sm mt-12">
    <h2>Metadaten</h2>
    <ul>
      <li>
        Diese Kampagne basiert auf Prozessierung im Projekt{' '}
        <a target="_blank" href="https://radverkehrsatlas.de"> radverkehrsatlas.de </a>
        .
      </li>
      <li>
        <a
          target="_blank"
          href="https://github.com/FixMyBerlin/atlas-app/blob/develop/processing/topics/roads_bikelanes/bikelanes/BikelaneTodos.lua"
        >
          Der Quellcode ist auf Github
        </a>
        .
      </li>
      {
        data.maprouletteChallenge.enabled === true && data.maprouletteChallenge.resultsLimited && (
          <li>
            <strong>Diese Kampagne ist künstlich limitiert auf 40.000 Aufgaben</strong>, da
            MapRoulette sonst nicht funktioniert. Das bedeutet, wenn Aufgaben erledigt wurden und
            die Kampage aktualisiert wird, werden neue Aufgaben nachkommen. Zumindest solange, bis
            wir uns unter die 40k gearbeitet haben.
          </li>
        )
      }
      {
        data.maprouletteChallenge.enabled === true && data.remoteGeoJson && (
          <li>
            MapRoulette Daten:{' '}
            <a href={`${data.remoteGeoJson}?download=true`} download target="_blank">
              GeoJSON-Datei
            </a>{' '}
            (Newline-delimited GeoJSON)
          </li>
        )
      }
      {
        data.maprouletteChallenge.enabled === true && data.maprouletteChallenge.rebuildAt && (
          <li>
            Die Aufgaben in MapRoulette wurden zuletzt am{' '}
            {new Date(data.maprouletteChallenge.rebuildAt).toLocaleString('de-DE')} aktualisiert.
          </li>
        )
      }
      {
        data.hashtags.length > 0 && (
          <>
            <li>
              OSMCha: Changesets mit{' '}
              <a
                href={`https://osmcha.org/?filters={"date__gte":[{"label":"2024-09-01","value":"2024-09-01"}],"source":[{"label":"radinfra_de","value":"radinfra_de"}]}`}
                target="_blank"
              >
                <code>source=radinfra_de</code>
              </a>
            </li>
            <li>
              OSMCha: Changesets mit Hashtag
              {data.hashtags.map((tag) => {
                return (
                  <a
                    href={`https://osmcha.org/?filters={"date__gte":[{"label":"2024-09-01","value":"2024-09-01"}],"metadata":[{"label":"hashtags=${tag}","value":"hashtags=${tag}"}]}`}
                    target="_blank"
                  >
                    <code>{tag}</code>
                  </a>
                )
              })}
            </li>
            <li>
              OSMCha: Changesets Comments die
              {data.hashtags.map((tag) => {
                return (
                  <a
                    href={`https://osmcha.org/?filters={"date__gte":[{"label":"2024-09-01","value":"2024-09-01"}],"comment":[{"label":"${tag}","value":"${tag}"}]}`}
                    target="_blank"
                  >
                    <code>{tag}</code>
                  </a>
                )
              })}
              enthalten.
            </li>
          </>
        )
      }
      <li>Veröffentlicht am {new Date(data.pubDate).toLocaleString()}</li>
    </ul>
  </ProseSection>

  <DevDetails title="Debugging">
    <pre>{JSON.stringify({ page }, undefined, 2)}</pre>
  </DevDetails>
</LayoutArticlePageAstro>
