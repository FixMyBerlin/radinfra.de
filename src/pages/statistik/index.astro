---
import About from '@components/page_statistik/About.astro'
import Beta from '@components/page_statistik/Beta.astro'
import CardLength from '@components/page_statistik/CardLength.astro'
import CardPercentageBikelanes from '@components/page_statistik/CardPercentageBikelanes.astro'
import CardPercentageCategoriesDetails from '@components/page_statistik/CardPercentageCategoriesDetails.astro'
import PageHeadline from '@components/text/PageHeadline.astro'
import ProseSection from '@components/text/ProseSection.astro'
import LayoutArticle from '@layouts/LayoutArticle.astro'

// const statistics = await getCollection('statistics')
// const bund = statistics
//   .filter((stat) => stat.data.properties.level === '4')
//   .sort((a, b) => a.data.properties.name.localeCompare(b.data.properties.name))

// const max_bikelane_sum = Math.max(
//   ...bund.map((bundesland) => bundesland.data.properties.bikelane_sum.sum),
// )
// const max_raod_sum = Math.max(...bund.map((bundesland) => bundesland.data.properties.road_sum.sum))
// const max_both_sum = Math.max(
//   ...bund.map(
//     (bundesland) =>
//       bundesland.data.properties.bikelane_sum.sum + bundesland.data.properties.road_sum.sum,
//   ),
// )

// export type Data = (typeof datas)[number]
// const datas = bund.map((bundesland) => {
//   const { name, bikelane_length, bikelane_sum, road_length, road_sum } = bundesland.data.properties
//   return {
//     slug: slugify(bundesland.data.properties.name),
//     name,
//     bikelane_sum,
//     road_sum,
//     bikelane_length,
//     road_length,
//     max_bikelane_sum,
//     max_raod_sum,
//     max_both_sum,
//   }
// })
---

<LayoutArticle title="Statistik zu Radinfrastrukturdaten in Deutschland">
  <PageHeadline
    category={undefined}
    headline="Statistische Auswertung"
    intro="Statistiken zur Radinfrastruktur pro Bundesland und Landkreis. Basierend auf den aufbereiteten Infrastrukturdaten aus OpenStreetMap."
  />

  <Beta />

  <ProseSection classes="@container mt-12 max-w-[90rem] lg:mr-12">
    <h2>Vergleich auf Bundesebene</h2>

    <CardPercentageCategoriesDetails levelKey="bund" />

    <!-- We use container queries to change the columns -->
    <div class="mt-12 grid gap-6 @3xl:grid-cols-2 @4xl:grid-cols-2">
      <CardPercentageBikelanes levelKey="bund" />
      <CardLength levelKey="bund" />
    </div>
  </ProseSection>
  <!--
  <h2>Auswertung der Bundesländer</h2>

  <Details title="Was die Statistiken zeigen">
    <p>
      Das erste (Kuchen-) Diagram zeigt die Anteile der einzelnen Führungsformen an der Gesamtlänge
      der Radinfrastruktur. Die Auswertungen unten zeigen die absoluten Längen der Führungsformen
      und des Straßennetzes.
    </p>
  </Details>

  <p>Bikelane Max: {max_bikelane_sum.toLocaleString()} km</p>
  <p>Road Max: {max_raod_sum.toLocaleString()} km</p>
  <p>Both Max: {max_both_sum.toLocaleString()} km</p>

  <div class="mt-12 mr-12 grid grid-cols-2 gap-4">
    <div class="flex flex-col gap-4">
      {
        datas.map((data) => {
          return (
            <div>
              <h2 class="mb-2 font-bold text-teal-50">
                <a href={`/statistik/bundesland/${data.slug}`}>{data.name}</a>
              </h2>
              <Barchart format="totals" data={data} />
            </div>
          )
        })
      }
    </div>
    <div class="flex flex-col gap-4">
      {
        datas.map((data) => {
          return (
            <div>
              <h2 class="mb-2 font-bold text-teal-50">
                <a href={`/statistik/bundesland/${data.slug}`}>{data.name}</a>
              </h2>
              <Barchart format="bikeinfra" data={data} />
            </div>
          )
        })
      }
    </div>
  </div> -->

  <ProseSection classes="prose-p:my-3">
    <About />
  </ProseSection>

  <!-- <Debug data={{ datas }} />
  <Debug data={{ bund }} /> -->
</LayoutArticle>
