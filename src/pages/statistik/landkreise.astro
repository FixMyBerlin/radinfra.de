---
import Debug from '@components/page_statistik/Debug.astro'
import { RadialBars } from '@components/page_statistik/graphs/RadialBars'
import Intro from '@components/page_statistik/Intro.astro'
import ProseSection from '@components/text/ProseSection.astro'
import LayoutApp from '@layouts/LayoutApp.astro'
import { getCollection } from 'astro:content'

const statistics = await getCollection('statistics')
const bund = statistics
  .filter((stat) => stat.data.properties.level === '6')
  .sort((a, b) => a.data.properties.name.localeCompare(b.data.properties.name))
---

<LayoutApp title="Karte der Radinfrastruktur in Deutschland">
  <ProseSection classes="mt-6">
    <h1>Statistik zu Radinfrastrukturdaten in Deutschland – LANDKREISE</h1>
    <p>
      <code>TODO</code>: Diese Ansicht soll später gefiltert werden könne nach Bundesland. Dafür
      müssen aber die Quelldaten eine Hierarchie bekommen.
    </p>
    <Intro />
  </ProseSection>

  <!-- <div class="my-10 mr-6">
    <TreemapGraph client:idle rawData={bund.map((d) => d.data)} height={200} width={800} />
  </div> -->

  <div class="mr-6 grid grid-cols-4 gap-4">
    {
      bund.map((bundesland) => {
        const data = Object.entries(bundesland.data.properties.road_length).map(([key, value]) => ({
          label: String(key[0]).toUpperCase(),
          value,
          title: key,
        }))
        return (
          <div>
            <h2 class="mb-2 font-bold text-emerald-700">{bundesland.data.properties.name}</h2>
            <RadialBars client:visible data={data} width={300} height={300} />
          </div>
        )
      })
    }
  </div>

  <Debug data={bund} />
</LayoutApp>
