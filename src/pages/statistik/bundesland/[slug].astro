---
export const prerender = true
import { bundeslandLandkreis } from '@components/page_statistik/bundeslandLandkreis.const'
//
import Debug from '@components/page_statistik/Debug.astro'
import Intro from '@components/page_statistik/Intro.astro'
import PageHeadline from '@components/text/PageHeadline.astro'
import ProseSection from '@components/text/ProseSection.astro'
import { slugify } from '@components/utils/slugify'
import LayoutArticle from '@layouts/LayoutArticle.astro'
import { getCollection, type CollectionEntry } from 'astro:content'

export async function getStaticPaths() {
  const bundeslaender = await getCollection('statistics', ({ data }) => {
    return data.properties.level === '4'
  })
  return bundeslaender.map((bundesland) => ({
    params: { slug: slugify(bundesland.data.properties.name) },
    props: bundesland,
  }))
}
type Props = CollectionEntry<'statistics'>

const bundesland = Astro.props

const landkreisOsmIds = bundeslandLandkreis.get(bundesland.id)
const landkreise = await getCollection('statistics', ({ data }) => {
  return landkreisOsmIds?.includes(data.id)
})
---

<LayoutArticle title="Karte der Radinfrastruktur in Deutschland">
  <PageHeadline
    category="Statistik"
    headline={`Statistik fÃ¼r die Landkreise in ${bundesland.data.properties.name}`}
    intro="Statistiken pro Landkreis. Basierend auf den aufbereiteten Radinfrastrukturdaten aus OpenStreetMap."
  />

  <ProseSection>
    <Intro />
  </ProseSection>

  <!-- <div class="my-10 mr-6">
    <TreemapGraph client:idle rawData={bund.map((d) => d.data)} height={200} width={800} />
  </div> -->

  <div class="mr-6 grid grid-cols-4 gap-4">
    {
      landkreise.map((landkreis) => {
        const data = Object.entries(landkreis.data.properties.bikelane_sum || {}).map(
          ([key, value]) => ({
            // label: String(key[0]).toUpperCase(),
            value: value ?? 0,
            title: key,
          }),
        )
        return (
          <div>
            <h2 class="mb-2 font-bold text-emerald-700">{landkreis.data.properties.name}</h2>
            {data.map(({ value, title }) => {
              return (
                <code class="block text-xs tracking-tight">
                  {title}: {value.toLocaleString()} km
                </code>
              )
            })}
            {/* <RadialBars client:visible data={data} width={300} height={300} /> */}
          </div>
        )
      })
    }
  </div>

  <Debug data={{ bundesland, landkreise }} />
</LayoutArticle>
